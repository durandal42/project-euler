'''
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
'''

'''Fibonacci numbers, starting from 1,2,3...'''

import common
import itertools

def sum_even_fibs_until(limit):
  return sum(filter(lambda x: x % 2 == 0,
                    itertools.takewhile(lambda x: x <= limit,
                                        common.fibs())))

common.assertEquals(0, sum_even_fibs_until(1))
common.assertEquals(2, sum_even_fibs_until(2))
common.assertEquals(2, sum_even_fibs_until(3))
common.assertEquals(2, sum_even_fibs_until(7))
common.assertEquals(10, sum_even_fibs_until(8))
common.assertEquals(10, sum_even_fibs_until(9))

common.submit(sum_even_fibs_until(4 * 10**6), expected=4613732)
